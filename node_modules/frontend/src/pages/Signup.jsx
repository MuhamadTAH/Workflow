import { useState } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import { authAPI, tokenManager } from '../api';
import PhoneMockup from '../components/PhoneMockup';
import '../styles/AuthStyles.css';

function Signup() {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    password: '',
    confirmPassword: ''
  });
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [conversation, setConversation] = useState([
    { id: 1, text: "Let's create your account! ‚ú® First, choose a cool username.", sender: 'them' }
  ]);
  const navigate = useNavigate();

  const addMessage = (text, sender) => {
    setConversation(prev => [...prev, { id: Date.now() + Math.random(), text, sender }]);
  };

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  const handleNameBlur = () => {
    const hasBeenAdded = conversation.some(msg => msg.sender === 'me' && msg.text === formData.name);
    if (formData.name && !hasBeenAdded) {
      addMessage(formData.name, 'me');
      setTimeout(() => {
        addMessage("Great choice! Now, what's your email? (e.g., alex@example.com) üìß", 'them');
      }, 400);
    }
  };
  
  const handleEmailBlur = () => {
    const hasBeenAdded = conversation.some(msg => msg.sender === 'me' && msg.text === formData.email);
    if (formData.email.includes('@') && formData.email.includes('.') && !hasBeenAdded) {
      addMessage(formData.email, 'me');
      setTimeout(() => {
        addMessage("Got it. Now, create a strong password. It needs to be at least 6 characters long. üîí", 'them');
      }, 400);
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (loading) return;

    if (!formData.name || !formData.email || !formData.password || !formData.confirmPassword) {
      setError("Please fill out all the fields to join us.");
      addMessage("Oops! Please fill out all the fields to join us. ‚úçÔ∏è", 'them');
      return;
    }

    if (formData.password !== formData.confirmPassword) {
      setError("Passwords don't match.");
      addMessage("Whoops! Your passwords don't match. Let's try that again. üëØ", 'them');
      return;
    }

    if (formData.password.length < 6) {
      setError("Password must be at least 6 characters long.");
      addMessage("Your password is a bit short! For security, please make it at least 6 characters long. üí™", 'them');
      return;
    }

    setLoading(true);
    setError('');
    addMessage('‚Ä¢'.repeat(formData.password.length), 'me');

    try {
      const response = await authAPI.signup(formData);
      const { token } = response.data;
      
      tokenManager.setToken(token);
      addMessage("You're all set! Welcome aboard! üéâ You can log in now.", 'them');
      
      setTimeout(() => {
        navigate('/');
      }, 2000);
    } catch (err) {
      const errorMessage = err.response?.data?.message || 'Signup failed';
      setError(errorMessage);
      addMessage("Oh no, something went sideways. ü§ñ Let's try signing up again in a moment.", 'them');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="auth-page">
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" />
      <main className="auth-container">
        <PhoneMockup conversation={conversation} view="signup" />
        <div className="auth-form">
          <h1 className="auth-form__title">Create Account</h1>
          
          {error && (
            <div className="error-message">
              {error}
            </div>
          )}

          <form onSubmit={handleSubmit}>
            <div className="input-group">
              <i className="fa-solid fa-user input-group__icon"></i>
              <input 
                type="text" 
                name="name"
                className="input-group__input" 
                placeholder="Username" 
                value={formData.name}
                onChange={handleChange}
                onBlur={handleNameBlur}
                autoComplete="username"
                required
              />
            </div>
            
            <div className="input-group">
              <i className="fa-solid fa-at input-group__icon"></i>
              <input 
                type="email" 
                name="email"
                className="input-group__input" 
                placeholder="Email" 
                value={formData.email}
                onChange={handleChange}
                onBlur={handleEmailBlur}
                autoComplete="email"
                required
              />
            </div>
            
            <div className="input-group">
              <i className="fa-solid fa-lock input-group__icon"></i>
              <input 
                type="password" 
                name="password"
                className="input-group__input" 
                placeholder="Password" 
                value={formData.password}
                onChange={handleChange}
                autoComplete="new-password"
                minLength="6"
                required
              />
            </div>
            
            <div className="input-group">
              <i className="fa-solid fa-lock input-group__icon"></i>
              <input 
                type="password" 
                name="confirmPassword"
                className="input-group__input" 
                placeholder="Confirm Password" 
                value={formData.confirmPassword}
                onChange={handleChange}
                autoComplete="new-password"
                required
              />
            </div>
            
            <div className="auth-form__buttons">
              <button type="submit" className="auth-btn" disabled={loading}>
                {loading ? 'Creating Account...' : 'Sign Up'}
              </button>
            </div>
            
            <div className="auth-form__secondary-buttons">
              <Link to="/login" className="auth-btn">Already have an account? Login</Link>
            </div>
          </form>
        </div>
      </main>
    </div>
  );
}

export default Signup;