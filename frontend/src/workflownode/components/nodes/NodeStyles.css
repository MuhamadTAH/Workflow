/*
=================================================================
FILE: NodeStyles.css - MASTER NODE STYLING CONTROLLER
=================================================================
ðŸŽ¯ MASTER FILE: Edit this file to change ALL node styles in the project
When you modify this file, ALL nodes in the main project will update their styling

This file contains the complete visual styling for all workflow nodes.
*/

/* =====================================================================
   MAIN NODE CONTAINER - Exact specification implementation
   ===================================================================== */
   .custom-node-ai {
    /* Shape & Container */
    background-color: transparent;       /* Transparent - show canvas background */
    border: 1px solid #d1d1d1;           /* Light gray border */
    border-radius: 40px;                 /* Smooth rounded pill shape */
    width: 250px;                        /* Fixed width */
    min-height: 80px;                    /* Dynamic height, minimum 80px */
    
    /* Typography */
    font-family: 'Helvetica Neue', Arial, sans-serif;  /* Font with fallback */
    
    /* Visual Effects */
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);        /* Subtle drop shadow (8% black opacity) */
    transition: border-color 0.2s ease, box-shadow 0.2s ease;  /* Smooth transitions */
    
    /* Positioning */
    position: relative;
    cursor: pointer;
  }
  
  /* =====================================================================
     SELECTION STATE - Blue border and glow as specified
     ===================================================================== */
  .react-flow__node-custom.selected .custom-node-ai {
    border: 2px solid #2563eb;                         /* Blue border when selected */
    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.2);     /* Blue shadow ring (20% opacity) */
  }
  
  /* HOVER EFFECTS - Smooth transitions */
  .custom-node-ai:hover {
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);        /* Enhanced shadow on hover */
    transform: translateY(-1px);                        /* Subtle visual feedback */
  }
  
  /* =====================================================================
     CONTENT LAYOUT - Header and Description sections as specified
     ===================================================================== */
  .custom-node-ai .node-content {
    padding: 10px 20px;                    /* Header padding: 10px top/bottom, 20px left/right */
    display: flex;
    flex-direction: column;
    align-items: flex-start;                /* Left-aligned content */
    width: 100%;
    box-sizing: border-box;                 /* Include padding in width calculation */
    overflow: hidden;                       /* Prevent any content from overflowing */
  }
  
  /* HEADER SECTION (Top area with icon and title) */
  .custom-node-ai .node-header {
    display: flex;
    align-items: center;
    justify-content: flex-start;            /* Left alignment */
    margin-bottom: 8px;                     /* 8px gap to description */
    width: 100%;
    background: transparent !important;     /* Remove any white background */
  }
  
  /* ICON POSITION - Enhanced visibility and styling */
  .custom-node-ai .node-icon {
    font-size: 18px;                       /* Larger 18px FontAwesome icon */
    margin-right: 12px;                    /* 12px gap to title */
    flex-shrink: 0;
    opacity: 1;                            /* Full opacity for maximum visibility */
    font-weight: 900;                      /* Extra bold for better visibility */
    filter: contrast(1.2) saturate(1.3);   /* Enhanced contrast and saturation */
    text-shadow: 0 0 1px rgba(0,0,0,0.1);  /* Subtle shadow for definition */
  }

  /* Enhanced icon colors with better contrast - Darker and more vibrant */
  .custom-node-ai .node-icon.text-blue-500 { color: #1d4ed8 !important; }      /* Darker blue */
  .custom-node-ai .node-icon.text-gold-500 { color: #d4af37 !important; }    /* Luxury gold */
  .text-gold-500 { color: #d4af37 !important; }    /* Global luxury gold class */
  .custom-node-ai .node-icon.text-green-500 { color: #16a34a !important; }     /* Darker green */
  .custom-node-ai .node-icon.text-pink-500 { color: #db2777 !important; }      /* Darker pink */
  .custom-node-ai .node-icon.text-indigo-500 { color: #4f46e5 !important; }    /* Darker indigo */
  .custom-node-ai .node-icon.text-blue-700 { color: #1e3a8a !important; }      /* Even darker blue */
  .custom-node-ai .node-icon.text-black { color: #000000 !important; }         /* Pure black */
  .custom-node-ai .node-icon.text-blue-600 { color: #1d4ed8 !important; }      /* Darker blue */
  .custom-node-ai .node-icon.text-gray-600 { color: #374151 !important; }      /* Darker gray */
  .custom-node-ai .node-icon.text-orange-500 { color: #ea580c !important; }    /* Darker orange */
  .custom-node-ai .node-icon.text-teal-500 { color: #0f766e !important; }      /* Darker teal */
  .custom-node-ai .node-icon.text-red-500 { color: #dc2626 !important; }       /* Darker red */
  .custom-node-ai .node-icon.text-yellow-500 { color: #ca8a04 !important; }    /* Darker yellow */
  .custom-node-ai .node-icon.text-gray-500 { color: #4b5563 !important; }      /* Darker gray */
  
  /* TITLE POSITION - Wrapping text that stays within node bounds */
  .custom-node-ai .node-label {
    font-size: 14px;                       /* 14px font size */
    font-weight: 600;                      /* Bold (600 weight) */
    color: #333;                           /* Dark gray */
    text-transform: uppercase;              /* UPPERCASE text */
    line-height: 1.2;
    white-space: normal;                    /* Allow text wrapping */
    word-wrap: break-word;                  /* Break long words if needed */
    overflow-wrap: break-word;              /* Break words to fit container */
    max-width: 180px;                       /* Still constrain width */
    flex: 1;                               /* Take available space */
  }
  
  /* DESCRIPTION SECTION - Wrapping text that stays within node bounds */
  .custom-node-ai .node-description {
    font-size: 13px;                       /* 13px font size as specified */
    font-weight: normal;                    /* Normal weight */
    color: #555;                           /* Medium gray */
    line-height: 1.4;                      /* 1.4 line height for readability */
    margin-top: 0;                         /* No extra margin (header already has 8px bottom) */
    text-align: left;                      /* Left-aligned */
    width: 100%;                           /* Full width */
    white-space: normal;                    /* Allow text wrapping */
    word-wrap: break-word;                  /* Break long words if needed */
    overflow-wrap: break-word;              /* Break words to fit container */
    box-sizing: border-box;                 /* Include padding in width calculation */
  }
  
  .custom-node-ai .node-status {
    font-size: 10px;
    color: #888;
    margin-top: 4px;
    font-style: italic;
    text-align: left;
  }
  
  /* =====================================================================
     CONNECTION HANDLES - Exact specification implementation
     ===================================================================== */
  
  /* LEFT INPUT HANDLE - Rectangular, centered vertically */
  .custom-node-ai .react-flow__handle[type="target"] {
    /* Shape & Size */
    width: 12px;                           /* 12px wide as specified */
    height: 40px;                          /* 40px tall as specified */
    border-radius: 4px 0 0 4px;            /* Rounded on left side only */
    
    /* Position */
    left: -13px;                           /* Extends 13px beyond left edge */
    top: 50%;
    transform: translateY(-50%);           /* Centered vertically */
    
    /* Colors */
    background: #888;                      /* Dark gray background */
    border: 1px solid #777;                /* Darker gray border */
    
    /* Remove default styling */
    border-radius: 4px 0 0 4px !important; /* Override ReactFlow defaults */
  }
  
  /* RIGHT OUTPUT HANDLE(S) - Circular with plus sign */
  .custom-node-ai .react-flow__handle[type="source"] {
    /* Shape & Size */
    width: 20px;                           /* 20px diameter as specified */
    height: 20px;
    border-radius: 50%;                    /* Circular shape */
    
    /* Position */
    right: -11px;                          /* Extends 11px beyond right edge */
    top: 50%;
    transform: translateY(-50%);           /* Centered vertically */
    
    /* Colors */
    background: #fff;                      /* White background */
    border: 1px solid #555;                /* Dark gray border */
    
    /* Plus sign styling */
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 16px;                       /* 16px plus sign */
    font-weight: bold;                     /* Bold plus sign */
    color: #555;                           /* Dark gray plus sign */
    
    /* Transitions */
    transition: all 0.2s ease;             /* Smooth hover effects */
  }
  
  /* Plus sign content */
  .custom-node-ai .react-flow__handle[type="source"]::before {
    content: '+';                          /* Plus sign symbol */
    font-size: 16px;                       /* Clear plus size */
    font-weight: bold;                     /* Bold plus sign */
    color: #555;                           /* Dark gray plus sign */
    line-height: 1;                        /* Perfect centering */
    position: absolute;                    /* Absolute positioning */
    top: 50%;                             /* Center vertically */
    left: 50%;                            /* Center horizontally */
    transform: translate(-50%, -50%);      /* Perfect center alignment */
  }
  
  /* Handle hover effects */
  .custom-node-ai .react-flow__handle:hover {
    border-color: #2563eb;                 /* Blue border on hover */
  }
  
  .custom-node-ai .react-flow__handle.connecting {
    border-color: #2563eb;                 /* Blue when connecting */
    background: #2563eb;
    color: white;                          /* White plus sign when connecting */
  }
  
  /* =====================================================================
     COLORED HANDLES - Special node types with color-coded outputs
     ===================================================================== */
  
  /* TRUE/SUCCESS handles - Green */
  .custom-node-ai .react-flow__handle.handle-true {
    background: #22c55e !important;       /* Green for TRUE */
    border-color: #16a34a !important;
    color: white !important;
  }
  
  .custom-node-ai .react-flow__handle.handle-true::before {
    color: white !important;              /* White plus on green */
  }
  
  /* FALSE/ERROR handles - Red */
  .custom-node-ai .react-flow__handle.handle-false {
    background: #ef4444 !important;       /* Red for FALSE */
    border-color: #dc2626 !important;
    color: white !important;
  }
  
  .custom-node-ai .react-flow__handle.handle-false::before {
    color: white !important;              /* White plus on red */
  }
  
  /* LOOP handles - Purple */
  .custom-node-ai .react-flow__handle.handle-loop {
    background: #8b5cf6 !important;       /* Purple for LOOP */
    border-color: #7c3aed !important;
    color: white !important;
  }
  
  .custom-node-ai .react-flow__handle.handle-loop::before {
    color: white !important;              /* White plus on purple */
  }
  
  /* DONE/COMPLETE handles - Gray */
  .custom-node-ai .react-flow__handle.handle-done {
    background: #6b7280 !important;       /* Gray for DONE */
    border-color: #4b5563 !important;
    color: white !important;
  }
  
  .custom-node-ai .react-flow__handle.handle-done::before {
    color: white !important;              /* White plus on gray */
  }
  
  /* Multiple handle positioning for special nodes */
  .custom-node-ai .react-flow__handle[style*="top: 30%"] {
    top: 30% !important;                   /* If Node TRUE/LOOP position */
  }
  
  .custom-node-ai .react-flow__handle[style*="top: 70%"] {
    top: 70% !important;                   /* If Node FALSE/DONE position */
  }
  
  /* =====================================================================
     HANDLE LABELS - Small text next to handles as specified
     ===================================================================== */
  .handle-label {
    position: absolute;
    font-size: 11px;                      /* 11px font size as specified */
    font-weight: bold;                     /* Bold text */
    color: #555;                          /* Medium gray default */
    pointer-events: none;                  /* Don't interfere with interactions */
    z-index: 10;
    font-family: 'Helvetica Neue', Arial, sans-serif;
    white-space: nowrap;
  }
  
  /* Right-side labels (for output handles) */
  .handle-label-right {
    right: -50px;                         /* 50px away from handles to avoid overlap */
    text-align: left;
    transform: translateY(-50%);          /* Vertically centered with handle */
  }
  
  /* Left-side labels (for input handles) */
  .handle-label-left {
    left: -50px;                          /* 50px away from handles to avoid overlap */
    text-align: right;
    transform: translateY(-50%);          /* Vertically centered with handle */
  }
  
  /* Color-coded label text matching handle colors */
  .handle-label-true { 
    color: #16a34a;                       /* Green for TRUE labels */
  }
  
  .handle-label-false { 
    color: #dc2626;                       /* Red for FALSE labels */
  }
  
  .handle-label-loop { 
    color: #7c3aed;                       /* Purple for LOOP labels */
  }
  
  .handle-label-done { 
    color: #4b5563;                       /* Gray for DONE labels */
  }
  
  /* =====================================================================
     ANIMATION EFFECTS - Kept for dynamic feedback
     ===================================================================== */
  @keyframes nodeAppear {
    from { opacity: 0; transform: scale(0.9); }
    to { opacity: 1; transform: scale(1); }
  }
  .custom-node-ai {
    animation: nodeAppear 0.3s ease-out;
  }
  .custom-node-ai.processing {
    animation: pulse 2s infinite;
  }
  @keyframes pulse {
    0%, 100% { box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06); }
    50% { box-shadow: 0 6px 20px rgba(59, 130, 246, 0.2); }
  }
  